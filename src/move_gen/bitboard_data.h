#include <stdint.h>

#ifndef BITBOARD_MISC_H
#define BITBOARD_MISC_H

static const uint64_t occupy_square[64] = {
    0x1, 0x2, 0x4, 0x8,
    0x10, 0x20, 0x40, 0x80,
    0x100, 0x200, 0x400, 0x800,
    0x1000, 0x2000, 0x4000, 0x8000,
    0x10000, 0x20000, 0x40000, 0x80000,
    0x100000, 0x200000, 0x400000, 0x800000,
    0x1000000, 0x2000000, 0x4000000, 0x8000000,
    0x10000000, 0x20000000, 0x40000000, 0x80000000,
    0x100000000, 0x200000000, 0x400000000, 0x800000000,
    0x1000000000, 0x2000000000, 0x4000000000, 0x8000000000,
    0x10000000000, 0x20000000000, 0x40000000000, 0x80000000000,
    0x100000000000, 0x200000000000, 0x400000000000, 0x800000000000,
    0x1000000000000, 0x2000000000000, 0x4000000000000, 0x8000000000000,
    0x10000000000000, 0x20000000000000, 0x40000000000000, 0x80000000000000,
    0x100000000000000, 0x200000000000000, 0x400000000000000, 0x800000000000000,
    0x1000000000000000, 0x2000000000000000, 0x4000000000000000, 0x8000000000000000};

static const uint64_t knight_move_lookup[64] = {
    0x20400, 0x50800, 0xa1100, 0x142200,
    0x284400, 0x508800, 0xa01000, 0x402000,
    0x2040004, 0x5080008, 0xa110011, 0x14220022,
    0x28440044, 0x50880088, 0xa0100010, 0x40200020,
    0x204000402, 0x508000805, 0xa1100110a, 0x1422002214,
    0x2844004428, 0x5088008850, 0xa0100010a0, 0x4020002040,
    0x20400040200, 0x50800080500, 0xa1100110a00, 0x142200221400,
    0x284400442800, 0x508800885000, 0xa0100010a000, 0x402000204000,
    0x2040004020000, 0x5080008050000, 0xa1100110a0000, 0x14220022140000,
    0x28440044280000, 0x50880088500000, 0xa0100010a00000, 0x40200020400000,
    0x204000402000000, 0x508000805000000, 0xa1100110a000000, 0x1422002214000000,
    0x2844004428000000, 0x5088008850000000, 0xa0100010a0000000, 0x4020002040000000,
    0x400040200000000, 0x800080500000000, 0x1100110a00000000, 0x2200221400000000,
    0x4400442800000000, 0x8800885000000000, 0x100010a000000000, 0x2000204000000000,
    0x4020000000000, 0x8050000000000, 0x110a0000000000, 0x22140000000000,
    0x44280000000000, 0x0088500000000000, 0x0010a00000000000, 0x20400000000000};

static const uint64_t king_move_lookup[64] = {
    0x302, 0x705, 0xe0a, 0x1c14,
    0x3828, 0x7050, 0xe0a0, 0xc040,
    0x30203, 0x70507, 0xe0a0e, 0x1c141c,
    0x382838, 0x705070, 0xe0a0e0, 0xc040c0,
    0x3020300, 0x7050700, 0xe0a0e00, 0x1c141c00,
    0x38283800, 0x70507000, 0xe0a0e000, 0xc040c000,
    0x302030000, 0x705070000, 0xe0a0e0000, 0x1c141c0000,
    0x3828380000, 0x7050700000, 0xe0a0e00000, 0xc040c00000,
    0x30203000000, 0x70507000000, 0xe0a0e000000, 0x1c141c000000,
    0x382838000000, 0x705070000000, 0xe0a0e0000000, 0xc040c0000000,
    0x3020300000000, 0x7050700000000, 0xe0a0e00000000, 0x1c141C00000000,
    0x38283800000000, 0x70507000000000, 0xe0a0e000000000, 0xc040C000000000,
    0x302030000000000, 0x705070000000000, 0xe0a0e0000000000, 0x1c141C0000000000,
    0x3828380000000000, 0x7050700000000000, 0xe0a0e00000000000, 0xc040C00000000000,
    0x203000000000000, 0x507000000000000, 0xa0e000000000000, 0x141C000000000000,
    0x2838000000000000, 0x5070000000000000, 0xa0e0000000000000, 0x40C0000000000000};

static const uint64_t rank_masks[8] = {
    0x00000000000000ff,
    0x000000000000ff00,
    0x0000000000ff0000,
    0x00000000ff000000,
    0x000000ff00000000,
    0x0000ff0000000000,
    0x00ff000000000000,
    0xff00000000000000,
};

static const uint64_t file_masks[8] = {
    0x0101010101010101,
    0x0202020202020202,
    0x0404040404040404,
    0x0808080808080808,
    0x1010101010101010,
    0x2020202020202020,
    0x4040404040404040,
    0x8080808080808080
};

static const uint64_t diagonal_masks[15] = {
    0x80, 0x8040, 0x804020,
    0x80402010, 0x8040201008, 0x804020100804,
    0x80402010080402, 0x8040201008040201, 0x4020100804020100,
    0x2010080402010000, 0x1008040201000000, 0x804020100000000,
    0x402010000000000, 0x201000000000000, 0x100000000000000
};

static const uint64_t antidiagonal_masks[15] = {
    0x1, 0x102, 0x10204,
    0x1020408, 0x102040810, 0x10204081020,
    0x1020408102040, 0x102040810204080, 0x204081020408000,
    0x408102040800000, 0x810204080000000, 0x1020408000000000,
    0x2040800000000000, 0x4080000000000000, 0x8000000000000000
};

static const int source_to_rank[64] = {
    0, 0, 0, 0, 0, 0, 0, 0,
    1, 1, 1, 1, 1, 1, 1, 1,
    2, 2, 2, 2, 2, 2, 2, 2,
    3, 3, 3, 3, 3, 3, 3, 3,
    4, 4, 4, 4, 4, 4, 4, 4,
    5, 5, 5, 5, 5, 5, 5, 5,
    6, 6, 6, 6, 6, 6, 6, 6,
    7, 7, 7, 7, 7, 7, 7, 7,
};
static const int source_to_file[64] = {
    0, 1, 2, 3, 4, 5, 6, 7,
    0, 1, 2, 3, 4, 5, 6, 7,
    0, 1, 2, 3, 4, 5, 6, 7,
    0, 1, 2, 3, 4, 5, 6, 7,
    0, 1, 2, 3, 4, 5, 6, 7,
    0, 1, 2, 3, 4, 5, 6, 7,
    0, 1, 2, 3, 4, 5, 6, 7,
    0, 1, 2, 3, 4, 5, 6, 7
};
static const int source_to_diagonal[64] = {
    7, 6, 5, 4, 3, 2, 1, 0,
    8, 7, 6, 5, 4, 3, 2, 1,
    9, 8, 7, 6, 5, 4, 3, 2,
    10, 9, 8, 7, 6, 5, 4, 3,
    11, 10, 9, 8, 7, 6, 5, 4,
    12, 11, 10, 9, 8, 7, 6, 5,
    13, 12, 11, 10, 9, 8, 7, 6,
    14, 13, 12, 11, 10, 9, 8, 7
};
static const int source_to_antidiagonal[64] = {
    0, 1, 2, 3, 4, 5, 6, 7,
    1, 2, 3, 4, 5, 6, 7, 8,
    2, 3, 4, 5, 6, 7, 8, 9,
    3, 4, 5, 6, 7, 8, 9, 10,
    4, 5, 6, 7, 8, 9, 10, 11,
    5, 6, 7, 8, 9, 10, 11, 12,
    6, 7, 8, 9, 10, 11, 12, 13,
    7, 8, 9, 10, 11, 12, 13, 14
};

/**
        Numbers for magic bitboards obtained from Pradyumna Kannan
         See his paper linked here: http://pradu.us/old/Nov27_2008/Buzz/research/magic/Bitboards.pdf
     */

static const int rook_magic_shift[64] = {
    52, 53, 53, 53, 53, 53, 53, 52,
    53, 54, 54, 54, 54, 54, 54, 53,
    53, 54, 54, 54, 54, 54, 54, 53,
    53, 54, 54, 54, 54, 54, 54, 53,
    53, 54, 54, 54, 54, 54, 54, 53,
    53, 54, 54, 54, 54, 54, 54, 53,
    53, 54, 54, 54, 54, 54, 54, 53,
    53, 54, 54, 53, 53, 53, 53, 53
};

static const uint64_t rook_magic[64] =
{
    (0x0080001020400080), (0x0040001000200040), (0x0080081000200080), (0x0080040800100080),
    (0x0080020400080080), (0x0080010200040080), (0x0080008001000200), (0x0080002040800100),
    (0x0000800020400080), (0x0000400020005000), (0x0000801000200080), (0x0000800800100080),
    (0x0000800400080080), (0x0000800200040080), (0x0000800100020080), (0x0000800040800100),
    (0x0000208000400080), (0x0000404000201000), (0x0000808010002000), (0x0000808008001000),
    (0x0000808004000800), (0x0000808002000400), (0x0000010100020004), (0x0000020000408104),
    (0x0000208080004000), (0x0000200040005000), (0x0000100080200080), (0x0000080080100080),
    (0x0000040080080080), (0x0000020080040080), (0x0000010080800200), (0x0000800080004100),
    (0x0000204000800080), (0x0000200040401000), (0x0000100080802000), (0x0000080080801000),
    (0x0000040080800800), (0x0000020080800400), (0x0000020001010004), (0x0000800040800100),
    (0x0000204000808000), (0x0000200040008080), (0x0000100020008080), (0x0000080010008080),
    (0x0000040008008080), (0x0000020004008080), (0x0000010002008080), (0x0000004081020004),
    (0x0000204000800080), (0x0000200040008080), (0x0000100020008080), (0x0000080010008080),
    (0x0000040008008080), (0x0000020004008080), (0x0000800100020080), (0x0000800041000080),
    (0x00FFFCDDFCED714A), (0x007FFCDDFCED714A), (0x003FFFCDFFD88096), (0x0000040810002101),
    (0x0001000204080011), (0x0001000204000801), (0x0001000082000401), (0x0001FFFAABFAD1A2)
};

static const uint64_t  rook_occupancy_mask[64] = {
    (0x000101010101017E), (0x000202020202027C), (0x000404040404047A), (0x0008080808080876),
    (0x001010101010106E), (0x002020202020205E), (0x004040404040403E), (0x008080808080807E),
    (0x0001010101017E00), (0x0002020202027C00), (0x0004040404047A00), (0x0008080808087600),
    (0x0010101010106E00), (0x0020202020205E00), (0x0040404040403E00), (0x0080808080807E00),
    (0x00010101017E0100), (0x00020202027C0200), (0x00040404047A0400), (0x0008080808760800),
    (0x00101010106E1000), (0x00202020205E2000), (0x00404040403E4000), (0x00808080807E8000),
    (0x000101017E010100), (0x000202027C020200), (0x000404047A040400), (0x0008080876080800),
    (0x001010106E101000), (0x002020205E202000), (0x004040403E404000), (0x008080807E808000),
    (0x0001017E01010100), (0x0002027C02020200), (0x0004047A04040400), (0x0008087608080800),
    (0x0010106E10101000), (0x0020205E20202000), (0x0040403E40404000), (0x0080807E80808000),
    (0x00017E0101010100), (0x00027C0202020200), (0x00047A0404040400), (0x0008760808080800),
    (0x00106E1010101000), (0x00205E2020202000), (0x00403E4040404000), (0x00807E8080808000),
    (0x007E010101010100), (0x007C020202020200), (0x007A040404040400), (0x0076080808080800),
    (0x006E101010101000), (0x005E202020202000), (0x003E404040404000), (0x007E808080808000),
    (0x7E01010101010100), (0x7C02020202020200), (0x7A04040404040400), (0x7608080808080800),
    (0x6E10101010101000), (0x5E20202020202000), (0x3E40404040404000), (0x7E80808080808000)
};

static const int bishop_magic_shift[64] = {
    58, 59, 59, 59, 59, 59, 59, 58,
    59, 59, 59, 59, 59, 59, 59, 59,
    59, 59, 57, 57, 57, 57, 59, 59,
    59, 59, 57, 55, 55, 57, 59, 59,
    59, 59, 57, 55, 55, 57, 59, 59,
    59, 59, 57, 57, 57, 57, 59, 59,
    59, 59, 59, 59, 59, 59, 59, 59,
    58, 59, 59, 59, 59, 59, 59, 58
};

static const uint64_t  bishop_magic[64] = {
    (0x0002020202020200), (0x0002020202020000), (0x0004010202000000), (0x0004040080000000),
    (0x0001104000000000), (0x0000821040000000), (0x0000410410400000), (0x0000104104104000),
    (0x0000040404040400), (0x0000020202020200), (0x0000040102020000), (0x0000040400800000),
    (0x0000011040000000), (0x0000008210400000), (0x0000004104104000), (0x0000002082082000),
    (0x0004000808080800), (0x0002000404040400), (0x0001000202020200), (0x0000800802004000),
    (0x0000800400A00000), (0x0000200100884000), (0x0000400082082000), (0x0000200041041000),
    (0x0002080010101000), (0x0001040008080800), (0x0000208004010400), (0x0000404004010200),
    (0x0000840000802000), (0x0000404002011000), (0x0000808001041000), (0x0000404000820800),
    (0x0001041000202000), (0x0000820800101000), (0x0000104400080800), (0x0000020080080080),
    (0x0000404040040100), (0x0000808100020100), (0x0001010100020800), (0x0000808080010400),
    (0x0000820820004000), (0x0000410410002000), (0x0000082088001000), (0x0000002011000800),
    (0x0000080100400400), (0x0001010101000200), (0x0002020202000400), (0x0001010101000200),
    (0x0000410410400000), (0x0000208208200000), (0x0000002084100000), (0x0000000020880000),
    (0x0000001002020000), (0x0000040408020000), (0x0004040404040000), (0x0002020202020000),
    (0x0000104104104000), (0x0000002082082000), (0x0000000020841000), (0x0000000000208800),
    (0x0000000010020200), (0x0000000404080200), (0x0000040404040400), (0x0002020202020200)
};

static const uint64_t  bishop_occupancy_mask[64] = {
    (0x0040201008040200), (0x0000402010080400), (0x0000004020100A00), (0x0000000040221400),
    (0x0000000002442800), (0x0000000204085000), (0x0000020408102000), (0x0002040810204000),
    (0x0020100804020000), (0x0040201008040000), (0x00004020100A0000), (0x0000004022140000),
    (0x0000000244280000), (0x0000020408500000), (0x0002040810200000), (0x0004081020400000),
    (0x0010080402000200), (0x0020100804000400), (0x004020100A000A00), (0x0000402214001400),
    (0x0000024428002800), (0x0002040850005000), (0x0004081020002000), (0x0008102040004000),
    (0x0008040200020400), (0x0010080400040800), (0x0020100A000A1000), (0x0040221400142200),
    (0x0002442800284400), (0x0004085000500800), (0x0008102000201000), (0x0010204000402000),
    (0x0004020002040800), (0x0008040004081000), (0x00100A000A102000), (0x0022140014224000),
    (0x0044280028440200), (0x0008500050080400), (0x0010200020100800), (0x0020400040201000),
    (0x0002000204081000), (0x0004000408102000), (0x000A000A10204000), (0x0014001422400000),
    (0x0028002844020000), (0x0050005008040200), (0x0020002010080400), (0x0040004020100800),
    (0x0000020408102000), (0x0000040810204000), (0x00000A1020400000), (0x0000142240000000),
    (0x0000284402000000), (0x0000500804020000), (0x0000201008040200), (0x0000402010080400),
    (0x0002040810204000), (0x0004081020400000), (0x000A102040000000), (0x0014224000000000),
    (0x0028440200000000), (0x0050080402000000), (0x0020100804020000), (0x0040201008040200)
};

#endif